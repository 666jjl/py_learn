list1 = ['physics', 'chemistry', 1997, 2000]

list2 = [1, 2, 3, 4, 5 ]

list3 = ["a", "b", "c", "d"]




	访问列表
	
	print "tup1[0]: ", list1[0]
	
	print "tup1[-1]: ", list1[-1]
	
	print "tup2[1:5]: ", list2[1:5]
	
	以上实例输出结果：
	
	list1[0]:  physics
	
	list1[-1]: 2000
	
	list2[1:5]:  [2, 3, 4, 5]
	
	#列表可以逆向索引 , 例中list1[0]=list1[-4]
	





更新列表




	list = []          ## 空列表
	
	list.append('Google')   ## 使用 append() 添加元素
	
	list.append('Runoob')
	
	print list
	



以上实例输出结果：



['Google', 'Runoob']




	删除列表元素
	



print list1

del list1[2]

print "After deleting value at index 2 : "

print list1



以上实例输出结果：




	['physics', 'chemistry', 1997, 2000]
	
	After deleting value at index 2 :
	
	['physics', 'chemistry', 2000]
	


	列表脚本操作符
	
	列表对 + 和 * 的操作符与字符串相似。+ 号用于组合列表，* 号用于重复列表。
	
	如下所示：
	
	
		
			
				Python 表达式
				
				结果
				
				描述
				
			
			
				len([1, 2, 3])
				
				3
				
				长度
				
			
			
				[1, 2, 3] + [4, 5, 6]
				
				[1, 2, 3, 4, 5, 6]
				
				组合
				
			
			
				['Hi!'] * 4
				
				['Hi!', 'Hi!', 'Hi!', 'Hi!']
				
				重复
				
			
			
				3 in [1, 2, 3]
				
				True
				
				元素是否存在于列表中
				
			
			
				for x in [1, 2, 3]: print x,
				
				1 2 3
				
				迭代
				
			
		
	






	列表函数&方法
	
	Python包含以下函数:
	
	
		
			
				序号
				
				函数
				
			
			
				1
				
				cmp(list1, list2)比较两个列表的元素
				
			
			
				2
				
				len(list)列表元素个数
				
			
			
				3
				
				max(list)返回列表元素最大值
				
			
			
				4
				
				min(list)返回列表元素最小值
				
			
			
				5
				
				list(seq)将元组转换为列表
				
			
		
	






	
		
			
				序号
				
				方法
				
			
			
				1
				
				list.append(obj)在列表末尾添加新的对象
				
			
			
				2
				
				list.count(obj)统计某个元素在列表中出现的次数
				
			
			
				3
				
				list.extend(seq)在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）
				
			
			
				4
				
				list.index(obj)从列表中找出某个值第一个匹配项的索引位置
				
			
			
				5
				
				list.insert(index, obj)将对象插入列表
				
			
			
				6
				
				list.pop(obj=list[-1])移除列表中的一个元素（默认最后一个元素），并且返回该元素的值
				
			
			
				7
				
				list.remove(obj)移除列表中某个值的第一个匹配项
				
			
			
				8
				
				list.reverse()反向列表中元素
				
			
			
				9
				
				list.sort([func])对原列表进行排序
				
			
		
	
